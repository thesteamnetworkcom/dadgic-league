Replace the externalAPIHealthCheck method around line 145-170 with:

  static async externalAPIHealthCheck(): Promise<HealthCheck> {
    const startTime = Date.now()

    try {
      // Test external APIs that your app depends on
      const checks = []

      // Check Gemini API if configured
      if (process.env.GEMINI_API_KEY) {
        try {
          // Simple test - we won't actually call Gemini but check if key is present
          checks.push({ service: 'gemini', status: 'configured' })
        } catch (error) {
          // FIXED: Properly handle unknown error type
          const errorMessage = error instanceof Error ? error.message : String(error)
          checks.push({ service: 'gemini', status: 'error', error: errorMessage })
        }
      }

      // Check Discord API if configured
      if (process.env.DISCORD_BOT_TOKEN) {
        checks.push({ service: 'discord', status: 'configured' })
      }

      const hasErrors = checks.some(check => check.status === 'error')

      return {
        name: 'external-apis',
        status: hasErrors ? 'degraded' : 'healthy',
        responseTime: Date.now() - startTime,
        metadata: {
          apiChecks: checks,
          configuredServices: checks.length
        },
        timestamp: new Date().toISOString()
      }
    } catch (error) {
      // FIXED: Properly handle unknown error type
      const errorMessage = error instanceof Error ? error.message : 'API check failed'
      return {
        name: 'external-apis',
        status: 'unhealthy',
        responseTime: Date.now() - startTime,
        error: errorMessage,
        timestamp: new Date().toISOString()
      }
    }
  }
